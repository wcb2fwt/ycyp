usage=dcm2jpg [<options>] <dicom-file> <jpeg-file>\n\
or dcm2jpg [Options] <dicom-file>... <outdir>\n\
or dcm2jpg [Options] <indir>... <outdir>
try=Try `dcm2jpg --help' for more information.
description=\nConvert DICOM image(s) to JPEG(s) or other image formats.\
\n-\
\nOptions\:
example=-\nExample: dcm2jpg img.dcm img.jpg\n\
=> Convert DICOM image 'img.dcm' to JPEG image 'img.jpg'
frame=frame to convert, 1 (= first frame) by default
format=output image format, JPEG by default
lsformats=list supported output image formats 
suffix=file extension used with destination directory argument,\
lower case format name by default
quality=compression quality (0.0-1.0) of output image
encoder=ImageWriter class to be used for encoding,\n\
com.sun.imageio.plugins.* (= JDK ImageIO plugins) by default
lsencoders=list available Image Writers for specified output image format
compression=Compression Type of Image Writer to be used
ps=file path of presentation state to apply
windowCenter=Window Center of linear VOI LUT function to apply
windowWidth=Window Width of linear VOI LUT function to apply
window=use <number>. Window Center/Width value, if the image provides \
several Window Center/Width values; use 1. by default.
voilut=use <number>. explicit VOI LUT, if the image provides \
several explicit VOI LUT; use 1. by default.
uselut=use explicit VOI LUT in image, even if the image also specifies \
Window Center/Width; prefer applying Window Center/Width over explicit VOI LUT \
by default
noauto=disable auto-windowing for images w/o VOI attributes
noshape=ignore present (2050,0020) Presentation LUT Shape; prioritize value of \
(0028,0004) Photometric Interpretation to determine if minimum sample value is \
intended to be displayed as white (=MONCHROME1) or as black (=MONCHROME2)
overlays=render overlays specified by bits 1-16 of <mask> in hex; FFFF by default.
ovlygray=grayscale value of rendered overlays in hex; FFFF (= white) by default.
ovlyrgb=color of rendered overlays as RGB color code; #ffffff (= white) by default.
iccprofile=specifies the color characteristics of, and inclusion of an ICC Profile in the rendered image:\n\
- no: include no ICC profile\n\
- yes: include the ICC Profile specified in the DICOM image, otherwise the sRGB ICC profile\n\
- srgb: include sRGB ICC profile and transform original pixels to sRGB color space if an ICC Profile is specified in the DICOM image\n\
- adobergb: include Adobe RGB ICC profile and transform original pixels to Adobe RGB color space\n\
- rommrgb: include ROMM RGB ICC profile and transform original pixels to ROMM RGB color space\n\
By default, include no ICC profile, but transform original pixels to sRGB color space if an ICC Profile is specified in the DICOM image.
writers=Supported Image Writers for format: {0}
writer=\n{0}\:\
\n   canWriteCompressed\: {1}\
\n  canWriteProgressive\: {2}\
\n        canWriteTiles\: {3}\
\n       canOffsetTiles\: {4}\
\n    Compression Types\: {5}
formats=Supported output image formats: {0}
missing=missing file operand
nodestdir=target {0} is not a directory
formatNotSupported=output image format: {0} not supported
noSuchImageWriter=no Image Writer: {0} for format {1} found
converted={0} -> {1}
failed=Failed to convert {0}: {1}
usedis=use DicomInputStream for reading the DICOM image. Supports deflated transfer syntaxes (default, without option --frame <number>)
useiis=use ImageInputStream for reading the DICOM image (default, with option --frame <number>)
